#include <iostream>
#include <vector>
#include <string>

using namespace std;

class Book {
public:
    string title;
    string author;
    string ISBN;
    bool isAvailable;

    Book(string t, string a, string i) : title(t), author(a), ISBN(i), isAvailable(true) {}
};

class Library {
private:
    vector<Book> books;

public:
    void addBook(const Book& book) {
        books.push_back(book);
    }

    void searchBook(const string& query) {
        for (const auto& book : books) {
            if (book.title == query || book.author == query || book.ISBN == query) {
                cout << "Book found: " << book.title << " by " << book.author << " (ISBN: " << book.ISBN << ")";
                if (book.isAvailable) {
                    cout << " - Available" << endl;
                } else {
                    cout << " - Checked out" << endl;
                }
                return;
            }
        }
        cout << "Book not found" << endl;
    }

    void checkoutBook(const string& ISBN) {
        for (auto& book : books) {
            if (book.ISBN == ISBN) {
                if (book.isAvailable) {
                    book.isAvailable = false;
                    cout << "Book checked out successfully" << endl;
                } else {
                    cout << "Book is already checked out" << endl;
                }
                return;
            }
        }
        cout << "Book not found" << endl;
    }

    void returnBook(const string& ISBN) {
        for (auto& book : books) {
            if (book.ISBN == ISBN) {
                if (!book.isAvailable) {
                    book.isAvailable = true;
                    cout << "Book returned successfully" << endl;
                } else {
                    cout << "Book was not checked out" << endl;
                }
                return;
            }
        }
        cout << "Book not found" << endl;
    }
};

int main() {
    Library library;
    library.addBook(Book("The Great Gatsby", "F. Scott Fitzgerald", "1234567890"));
    library.addBook(Book("1984", "George Orwell", "0987654321"));

    int choice;
    string query, ISBN;

    do {
        cout << "\nLibrary Management System\n";
        cout << "1. Search Book\n";
        cout << "2. Checkout Book\n";
        cout << "3. Return Book\n";
        cout << "4. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter title, author, or ISBN to search: ";
                cin.ignore();
                getline(cin, query);
                library.searchBook(query);
                break;
            case 2:
                cout << "Enter ISBN to checkout: ";
                cin >> ISBN;
                library.checkoutBook(ISBN);
                break;
            case 3:
                cout << "Enter ISBN to return: ";
                cin >> ISBN;
                library.returnBook(ISBN);
                break;
            case 4:
                cout << "Exiting..." << endl;
                break;
            default:
                cout << "Invalid choice" << endl;
        }
    } while (choice != 4);

    return 0;
}
